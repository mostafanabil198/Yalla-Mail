/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mailapp.gui;

import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import linkedList.cs45_cs23.LinkedList;
import mailapp.logicCode.Filter;
import mailapp.logicCode.UserContacts;
import mailapp.logicCode.UserContactsFunctions;

/**
 *
 * @author HP
 */
public class ContactsGui extends javax.swing.JFrame {

    public String currentUser;
    int xMouse;
    int yMouse;
    int pageCounter = 1;
    int filterCounter = 0;
    int sortCounter = 0;
    public static UserContacts[] allContacts;
    public static Inbox in;
    public String searchOn = "User Name";
    public String searchOnSort = "User Name";
    public String searchWord1 = "";
    public String sortOn = "";

    /**
     * Creates new form ContactsGui
     */
    public ContactsGui(String current, JFrame inbox) {
        in = (Inbox) inbox;
        currentUser = current;
        initComponents();
        UserContactsFunctions uc = new UserContactsFunctions();
        uc.setViewingOptions(currentUser, null, null, false);
        allContacts = (UserContacts[]) uc.listContacts(1);
        ShowCheckBoxContact(uc.showContactsInTable(allContacts, jTable1));
        sortContacts.setVisible(false);
        FilterContacts.setVisible(false);
        jLabel2.setVisible(false);

    }

    public void ShowCheckBoxContact(int size) {
        if (size >= 1) {
            check1.setVisible(true);
            check1.setSelected(false);
        } else {
            check1.setVisible(false);
            check1.setSelected(false);
        }
        if (size >= 2) {
            check2.setVisible(true);
            check2.setSelected(false);
        } else {
            check2.setVisible(false);
            check2.setSelected(false);
        }
        if (size >= 3) {
            check3.setVisible(true);
            check3.setSelected(false);
        } else {
            check3.setVisible(false);
            check3.setSelected(false);
        }
        if (size >= 4) {
            check4.setVisible(true);
            check4.setSelected(false);
        } else {
            check4.setVisible(false);
            check4.setSelected(false);
        }
        if (size >= 5) {
            check5.setVisible(true);
            check5.setSelected(false);
        } else {
            check5.setVisible(false);
            check5.setSelected(false);
        }
    }

    public LinkedList NomOfCheckedContact() {
        LinkedList indexs = new LinkedList();
        if (check1.isSelected() && check1.isVisible()) {
            indexs.add(0);
        }
        if (check2.isSelected() && check2.isVisible()) {
            indexs.add(1);
        }
        if (check3.isSelected() && check3.isVisible()) {
            indexs.add(2);
        }
        if (check4.isSelected() && check4.isVisible()) {
            indexs.add(3);
        }
        if (check5.isSelected() && check5.isVisible()) {
            indexs.add(4);
        }
        return indexs;
    }

    private ContactsGui() {
        sortContacts.setVisible(false);
        FilterContacts.setVisible(false);
        jLabel2.setVisible(false);
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLayeredPane1 = new javax.swing.JLayeredPane();
        FilterContacts = new javax.swing.JPanel();
        userNameFilter = new javax.swing.JLabel();
        phoneNumFilter = new javax.swing.JLabel();
        backgroundSort1 = new javax.swing.JLabel();
        sortContacts = new javax.swing.JPanel();
        phoneNumSort1 = new javax.swing.JLabel();
        userNameSort1 = new javax.swing.JLabel();
        backgroundSort = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        check1 = new javax.swing.JCheckBox();
        check2 = new javax.swing.JCheckBox();
        check3 = new javax.swing.JCheckBox();
        check5 = new javax.swing.JCheckBox();
        check4 = new javax.swing.JCheckBox();
        conact2 = new javax.swing.JLabel();
        conact3 = new javax.swing.JLabel();
        conact4 = new javax.swing.JLabel();
        conact5 = new javax.swing.JLabel();
        conact1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        exit = new javax.swing.JLabel();
        minimize = new javax.swing.JLabel();
        dragFrame = new javax.swing.JLabel();
        sortOption = new javax.swing.JLabel();
        searchOption = new javax.swing.JLabel();
        searchOptionWord = new javax.swing.JLabel();
        searchWord = new javax.swing.JTextField();
        AddContacts = new javax.swing.JLabel();
        DeleteContacts = new javax.swing.JLabel();
        searchContact = new javax.swing.JLabel();
        PrevPage1 = new javax.swing.JLabel();
        NextPage = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        pageNum = new javax.swing.JLabel();
        backgroundContacts = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLayeredPane1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        FilterContacts.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        userNameFilter.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        userNameFilter.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                userNameFilterMouseClicked(evt);
            }
        });
        FilterContacts.add(userNameFilter, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 23, 133, 34));

        phoneNumFilter.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        phoneNumFilter.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                phoneNumFilterMouseClicked(evt);
            }
        });
        FilterContacts.add(phoneNumFilter, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 70, 150, 34));

        backgroundSort1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mailapp/gui/filterContacts.png"))); // NOI18N
        FilterContacts.add(backgroundSort1, new org.netbeans.lib.awtextra.AbsoluteConstraints(-4, -3, -1, -1));

        jLayeredPane1.add(FilterContacts, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 150, 215, 130));

        sortContacts.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        phoneNumSort1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        phoneNumSort1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                phoneNumSort1MouseClicked(evt);
            }
        });
        sortContacts.add(phoneNumSort1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 70, 150, 34));

        userNameSort1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        userNameSort1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                userNameSort1MouseClicked(evt);
            }
        });
        sortContacts.add(userNameSort1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 23, 133, 34));

        backgroundSort.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mailapp/gui/filterContacts.png"))); // NOI18N
        sortContacts.add(backgroundSort, new org.netbeans.lib.awtextra.AbsoluteConstraints(-4, -3, 220, 140));

        jLayeredPane1.add(sortContacts, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 150, -1, 140));

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel1.add(check1, new org.netbeans.lib.awtextra.AbsoluteConstraints(743, 30, -1, -1));
        jPanel1.add(check2, new org.netbeans.lib.awtextra.AbsoluteConstraints(743, 120, -1, -1));
        jPanel1.add(check3, new org.netbeans.lib.awtextra.AbsoluteConstraints(743, 195, -1, -1));
        jPanel1.add(check5, new org.netbeans.lib.awtextra.AbsoluteConstraints(743, 362, -1, -1));
        jPanel1.add(check4, new org.netbeans.lib.awtextra.AbsoluteConstraints(743, 280, -1, -1));

        conact2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                conact2MouseClicked(evt);
            }
        });
        jPanel1.add(conact2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 87, 740, 80));

        conact3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                conact3MouseClicked(evt);
            }
        });
        jPanel1.add(conact3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 170, 740, 80));

        conact4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                conact4MouseClicked(evt);
            }
        });
        jPanel1.add(conact4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 252, 740, 80));

        conact5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                conact5MouseClicked(evt);
            }
        });
        jPanel1.add(conact5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 335, 740, 80));

        conact1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                conact1MouseClicked(evt);
            }
        });
        jPanel1.add(conact1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 2, 740, 80));

        jScrollPane2.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane2.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        jScrollPane2.setOpaque(false);

        jTable1.setAutoCreateRowSorter(true);
        jTable1.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 16)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "", "", ""
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setDropMode(javax.swing.DropMode.ON);
        jTable1.setFocusable(false);
        jTable1.setName(""); // NOI18N
        jTable1.setOpaque(false);
        jTable1.setRowHeight(83);
        jTable1.setRowSelectionAllowed(false);
        jTable1.setShowHorizontalLines(false);
        jTable1.setShowVerticalLines(false);
        jScrollPane2.setViewportView(jTable1);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -12, 740, 430));

        jLayeredPane1.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(2, 180, 774, 420));

        exit.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        exit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                exitMouseClicked(evt);
            }
        });
        jLayeredPane1.add(exit, new org.netbeans.lib.awtextra.AbsoluteConstraints(739, 10, 23, 40));

        minimize.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        minimize.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                minimizeMouseClicked(evt);
            }
        });
        jLayeredPane1.add(minimize, new org.netbeans.lib.awtextra.AbsoluteConstraints(706, 10, 23, 40));

        dragFrame.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        dragFrame.setName(""); // NOI18N
        dragFrame.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                dragFrameMouseDragged(evt);
            }
        });
        dragFrame.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                dragFrameMousePressed(evt);
            }
        });
        jLayeredPane1.add(dragFrame, new org.netbeans.lib.awtextra.AbsoluteConstraints(4, 5, 770, 45));

        sortOption.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        sortOption.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                sortOptionMouseClicked(evt);
            }
        });
        jLayeredPane1.add(sortOption, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 90, 110, 54));

        searchOption.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        searchOption.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchOptionMouseClicked(evt);
            }
        });
        jLayeredPane1.add(searchOption, new org.netbeans.lib.awtextra.AbsoluteConstraints(164, 91, 154, 54));

        searchOptionWord.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 18)); // NOI18N
        searchOptionWord.setForeground(new java.awt.Color(255, 255, 255));
        searchOptionWord.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        searchOptionWord.setText("User Name");
        jLayeredPane1.add(searchOptionWord, new org.netbeans.lib.awtextra.AbsoluteConstraints(156, 89, 154, 54));

        searchWord.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 16)); // NOI18N
        searchWord.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        searchWord.setBorder(null);
        searchWord.setOpaque(false);
        searchWord.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                searchWordKeyTyped(evt);
            }
        });
        jLayeredPane1.add(searchWord, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 96, 242, 46));

        AddContacts.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        AddContacts.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AddContactsMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                AddContactsMouseEntered(evt);
            }
        });
        jLayeredPane1.add(AddContacts, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 624, 151, 66));

        DeleteContacts.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        DeleteContacts.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                DeleteContactsMouseClicked(evt);
            }
        });
        jLayeredPane1.add(DeleteContacts, new org.netbeans.lib.awtextra.AbsoluteConstraints(417, 624, 151, 66));

        searchContact.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        searchContact.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchContactMouseClicked(evt);
            }
        });
        jLayeredPane1.add(searchContact, new org.netbeans.lib.awtextra.AbsoluteConstraints(563, 95, 48, 47));

        PrevPage1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        PrevPage1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PrevPage1MouseClicked(evt);
            }
        });
        jLayeredPane1.add(PrevPage1, new org.netbeans.lib.awtextra.AbsoluteConstraints(633, 97, 51, 38));

        NextPage.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        NextPage.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                NextPageMouseClicked(evt);
            }
        });
        jLayeredPane1.add(NextPage, new org.netbeans.lib.awtextra.AbsoluteConstraints(704, 97, 51, 38));

        jLabel1.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(248, 6, 6));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLayeredPane1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 50, 250, 40));

        jLabel2.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("<");
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel2MouseClicked(evt);
            }
        });
        jLayeredPane1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 640, 40, 40));

        pageNum.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 18)); // NOI18N
        pageNum.setForeground(new java.awt.Color(255, 255, 255));
        pageNum.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        pageNum.setText("1");
        jLayeredPane1.add(pageNum, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 60, 50, 40));

        backgroundContacts.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mailapp/gui/contacts.png"))); // NOI18N
        backgroundContacts.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jLayeredPane1.add(backgroundContacts, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        getContentPane().add(jLayeredPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 780, 710));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void dragFrameMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dragFrameMouseDragged
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();
        this.setLocation(x - xMouse, y - yMouse);
    }//GEN-LAST:event_dragFrameMouseDragged

    private void dragFrameMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dragFrameMousePressed
        xMouse = evt.getX();
        yMouse = evt.getY();
    }//GEN-LAST:event_dragFrameMousePressed

    private void exitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitMouseClicked
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_exitMouseClicked

    private void minimizeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minimizeMouseClicked
        // TODO add your handling code here:
        this.setState(Inbox.ICONIFIED);
    }//GEN-LAST:event_minimizeMouseClicked

    private void AddContactsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AddContactsMouseClicked
        AddContactGui add = new AddContactGui(this);
        add.setVisible(true);
        add.currentUser = currentUser;
        add.setLocationRelativeTo(null);
        add.nameAddCon.setText("");
        add.nameAddCon2.setText("");
        add.nameAddCon1.setText("");
        add.empty.setText("");
    }//GEN-LAST:event_AddContactsMouseClicked

    private void DeleteContactsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DeleteContactsMouseClicked
        UserContactsFunctions uc = new UserContactsFunctions();
        LinkedList indexes = new LinkedList();
        indexes = NomOfCheckedContact();
        System.out.println(indexes.size());
        UserContacts[] contacts = allContacts;
        try {
            uc.deleteContacts(currentUser, indexes, contacts);
            uc.setViewingOptions(currentUser, null, null, false);
            allContacts = (UserContacts[]) uc.listContacts(pageCounter);
            ShowCheckBoxContact(uc.showContactsInTable(allContacts, jTable1));
        } catch (IOException ex) {
            Logger.getLogger(ContactsGui.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_DeleteContactsMouseClicked

    private void conact1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_conact1MouseClicked
        showContacts(0, evt);
    }//GEN-LAST:event_conact1MouseClicked

    private void conact2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_conact2MouseClicked
        showContacts(1, evt);
    }//GEN-LAST:event_conact2MouseClicked

    private void conact3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_conact3MouseClicked
        showContacts(2, evt);
    }//GEN-LAST:event_conact3MouseClicked

    private void conact4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_conact4MouseClicked
        showContacts(3, evt);
    }//GEN-LAST:event_conact4MouseClicked

    private void conact5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_conact5MouseClicked
        showContacts(4, evt);
    }//GEN-LAST:event_conact5MouseClicked

    private void searchOptionMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchOptionMouseClicked
        filterCounter++;
        if (filterCounter % 2 == 1) {
            FilterContacts.setVisible(true);
            sortContacts.setVisible(false);
            sortCounter = 0;
        } else {
            FilterContacts.setVisible(false);
        }
    }//GEN-LAST:event_searchOptionMouseClicked

    private void sortOptionMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sortOptionMouseClicked
        sortCounter++;
        if (sortCounter % 2 == 1) {
            sortContacts.setVisible(true);
            FilterContacts.setVisible(false);
            filterCounter = 0;
        } else {
            sortContacts.setVisible(false);
        }
    }//GEN-LAST:event_sortOptionMouseClicked

    private void userNameFilterMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_userNameFilterMouseClicked
        searchOn = "User Name";
        FilterContacts.setVisible(false);
        searchOptionWord.setText(searchOn);
        filterCounter++;
    }//GEN-LAST:event_userNameFilterMouseClicked

    private void phoneNumFilterMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_phoneNumFilterMouseClicked
        searchOn = "Phone Num";
        FilterContacts.setVisible(false);
        searchOptionWord.setText(searchOn);
        filterCounter++;
    }//GEN-LAST:event_phoneNumFilterMouseClicked

    private void searchContactMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchContactMouseClicked
        if (allContacts[0] != null) {
            if (searchWord.getText().length() != 0) {
                searchOnSort = searchOn;
                searchWord1 = searchWord.getText();
                jLabel2.setVisible(true);
                jLabel1.setText("");
                UserContactsFunctions uc = new UserContactsFunctions();
                Filter f = new Filter();
                if (searchOn.equals("User Name")) {
                    f.contactName = true;
                    f.contactName1 = searchWord.getText();
                } else if (searchOn.equals("Phone Num")) {
                    f.contactPhone = true;
                    f.contactPhone1 = searchWord.getText();
                }
                Filter s = new Filter();
                if (sortOn.isEmpty()) {
                    uc.setViewingOptions(currentUser, f, null, false);

                } else if (sortOn.equals("User Name")) {
                    s.contactName = true;
                    uc.setViewingOptions(currentUser, f, s, false);

                } else if (sortOn.equals("Phone Num")) {
                    s.contactPhone = true;
                    uc.setViewingOptions(currentUser, f, s, false);

                }
                searchWord.setText("");
                allContacts = (UserContacts[]) uc.listContacts(1);
                ShowCheckBoxContact(uc.showContactsInTable(allContacts, jTable1));
            } else {
                jLabel1.setText("EMPTY FIELD");
            }

        } else {
            jLabel1.setText("No contacts");
        }
    }//GEN-LAST:event_searchContactMouseClicked

    private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseClicked
        searchWord1 = "";
        UserContactsFunctions uc = new UserContactsFunctions();
        uc.setViewingOptions(currentUser, null, null, false);
        allContacts = (UserContacts[]) uc.listContacts(1);
        ShowCheckBoxContact(uc.showContactsInTable(allContacts, jTable1));
        jLabel2.setVisible(false);
    }//GEN-LAST:event_jLabel2MouseClicked

    private void userNameSort1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_userNameSort1MouseClicked
        UserContactsFunctions uc = new UserContactsFunctions();
        Filter f = new Filter();
        sortOn = "User Name";
        if (!searchWord1.isEmpty()) {
            if (searchOnSort.equals("User Name")) {
                f.contactName = true;
                f.contactName1 = searchWord1;
            } else if (searchOnSort.equals("Phone Num")) {
                f.contactPhone = true;
                f.contactPhone1 = searchWord1;
            }
            Filter s = new Filter();
            s.contactName = true;
            uc.setViewingOptions(currentUser, f, s, false);
        } else {
            Filter s = new Filter();
            s.contactName = true;
            uc.setViewingOptions(currentUser, null, s, false);
        }
        allContacts = (UserContacts[]) uc.listContacts(1);
        ShowCheckBoxContact(uc.showContactsInTable(allContacts, jTable1));
        sortContacts.setVisible(false);
        sortCounter++;
        jLabel2.setVisible(true);
    }//GEN-LAST:event_userNameSort1MouseClicked

    private void phoneNumSort1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_phoneNumSort1MouseClicked
        UserContactsFunctions uc = new UserContactsFunctions();
        Filter f = new Filter();
        sortOn = "User Name";
        if (!searchWord1.isEmpty()) {
            if (searchOnSort.equals("User Name")) {
                f.contactName = true;
                f.contactName1 = searchWord1;
            } else if (searchOnSort.equals("Phone Num")) {
                f.contactPhone = true;
                f.contactPhone1 = searchWord1;
            }
            Filter s = new Filter();
            s.contactPhone = true;
            uc.setViewingOptions(currentUser, f, s, false);
        } else {
            Filter s = new Filter();
            s.contactPhone = true;
            uc.setViewingOptions(currentUser, null, s, false);
        }
        allContacts = (UserContacts[]) uc.listContacts(1);
        ShowCheckBoxContact(uc.showContactsInTable(allContacts, jTable1));
        sortContacts.setVisible(false);
        sortCounter++;
        jLabel2.setVisible(true);
    }//GEN-LAST:event_phoneNumSort1MouseClicked

    private void NextPageMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_NextPageMouseClicked
        UserContactsFunctions uc = new UserContactsFunctions();
        uc.setViewingOptions(currentUser, null, null, true);
        if (uc.checkPage(pageCounter + 1)) {
            pageCounter++;
            pageNum.setText(String.valueOf(pageCounter));
            uc.setViewingOptions(currentUser, null, null, true);
            allContacts = (UserContacts[]) uc.listContacts(pageCounter);
            ShowCheckBoxContact(uc.showContactsInTable(allContacts, jTable1));
        }
    }//GEN-LAST:event_NextPageMouseClicked

    private void PrevPage1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PrevPage1MouseClicked
        UserContactsFunctions uc = new UserContactsFunctions();
        uc.setViewingOptions(currentUser, null, null, true);
        if (uc.checkPage(pageCounter - 1)) {
            pageCounter--;
            pageNum.setText(String.valueOf(pageCounter));
            uc.setViewingOptions(currentUser, null, null, true);
            allContacts = (UserContacts[]) uc.listContacts(pageCounter);
            ShowCheckBoxContact(uc.showContactsInTable(allContacts, jTable1));
        }
    }//GEN-LAST:event_PrevPage1MouseClicked

    private void searchWordKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchWordKeyTyped
        char typed = evt.getKeyChar();
        UserContactsFunctions uc = new UserContactsFunctions();
        Filter f = new Filter();
        if (searchOn.equals("User Name")) {
            f.contactName = true;
            if ((int) evt.getKeyChar() == 8) {
                f.contactName1 = searchWord.getText();
            } else {
                f.contactName1 = searchWord.getText() + typed;
            }
            
        } else if (searchOn.equals("Phone Num")) {
            f.contactPhone = true;
            if ((int) evt.getKeyChar() == 8) {
                f.contactPhone1 = searchWord.getText();
            } else {
                f.contactPhone1 = searchWord.getText() + typed;
            }
        }
        Filter s = new Filter();
        if (sortOn.isEmpty()) {
            uc.setViewingOptionsTyped(currentUser, f, null, false);

        } else if (sortOn.equals("User Name")) {
            s.contactName = true;
            uc.setViewingOptionsTyped(currentUser, f, s, false);

        } else if (sortOn.equals("Phone Num")) {
            s.contactPhone = true;
            uc.setViewingOptionsTyped(currentUser, f, s, false);

        }
        allContacts = (UserContacts[]) uc.listContacts(1);
        uc.showContactsInTable(allContacts, jTable1);
    }//GEN-LAST:event_searchWordKeyTyped

    private void AddContactsMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AddContactsMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_AddContactsMouseEntered
    private void showContacts(int i, java.awt.event.MouseEvent evt) {
        if (allContacts[i] != null) {
            if (evt.getClickCount() == 2) {
                UserContactsFunctions uc = new UserContactsFunctions();
                OpenContact con = new OpenContact(currentUser, this);
                con.setVisible(true);
                con.setLocationRelativeTo(null);
                UserContacts user = (UserContacts) allContacts[i];
                con.nameOpenCont2.setText(user.userName);
                con.nameOpenCont1.setText(user.phoneNumber);
                con.jTextArea1.setText(uc.showNames(user.emails));
                con.nameEditCont.setText(user.userName);
                con.numberEditCont.setText(user.phoneNumber);
                con.jTextArea2.setText(uc.showNames(user.emails));
                con.uc = (UserContacts) allContacts[i];
                int z = 0;
                while (z != allContacts[i].emails.size()) {
                    con.emails.add((String) allContacts[i].emails.get(z));
                    z++;
                }
            }
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ContactsGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ContactsGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ContactsGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ContactsGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ContactsGui().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel AddContacts;
    private javax.swing.JLabel DeleteContacts;
    private javax.swing.JPanel FilterContacts;
    private javax.swing.JLabel NextPage;
    private javax.swing.JLabel PrevPage1;
    private javax.swing.JLabel backgroundContacts;
    private javax.swing.JLabel backgroundSort;
    private javax.swing.JLabel backgroundSort1;
    private javax.swing.JCheckBox check1;
    private javax.swing.JCheckBox check2;
    private javax.swing.JCheckBox check3;
    private javax.swing.JCheckBox check4;
    private javax.swing.JCheckBox check5;
    private javax.swing.JLabel conact1;
    private javax.swing.JLabel conact2;
    private javax.swing.JLabel conact3;
    private javax.swing.JLabel conact4;
    private javax.swing.JLabel conact5;
    private javax.swing.JLabel dragFrame;
    private javax.swing.JLabel exit;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    public static javax.swing.JTable jTable1;
    private javax.swing.JLabel minimize;
    private javax.swing.JLabel pageNum;
    private javax.swing.JLabel phoneNumFilter;
    private javax.swing.JLabel phoneNumSort1;
    private javax.swing.JLabel searchContact;
    private javax.swing.JLabel searchOption;
    private javax.swing.JLabel searchOptionWord;
    private javax.swing.JTextField searchWord;
    private javax.swing.JPanel sortContacts;
    private javax.swing.JLabel sortOption;
    private javax.swing.JLabel userNameFilter;
    private javax.swing.JLabel userNameSort1;
    // End of variables declaration//GEN-END:variables
}
